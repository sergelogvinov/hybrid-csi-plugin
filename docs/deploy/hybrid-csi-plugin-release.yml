---
# Source: hybrid-csi-plugin/templates/namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: csi-hybrid
  labels:
    pod-security.kubernetes.io/enforce: baseline
    pod-security.kubernetes.io/audit: baseline
    pod-security.kubernetes.io/warn: baseline
---
# Source: hybrid-csi-plugin/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hybrid-csi-plugin-controller
  namespace: csi-hybrid
  labels:
    helm.sh/chart: hybrid-csi-plugin-0.1.1
    app.kubernetes.io/name: hybrid-csi-plugin
    app.kubernetes.io/instance: hybrid-csi-plugin
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: hybrid-csi-plugin/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hybrid-csi-plugin-node
  namespace: csi-hybrid
  labels:
    helm.sh/chart: hybrid-csi-plugin-0.1.1
    app.kubernetes.io/name: hybrid-csi-plugin
    app.kubernetes.io/instance: hybrid-csi-plugin
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: hybrid-csi-plugin/templates/controller-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hybrid-csi-plugin-controller
  namespace: csi-hybrid
  labels:
    helm.sh/chart: hybrid-csi-plugin-0.1.1
    app.kubernetes.io/name: hybrid-csi-plugin
    app.kubernetes.io/instance: hybrid-csi-plugin
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "patch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "create", "patch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["patch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get","list", "watch", "create", "update", "patch"]

  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]

  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
---
# Source: hybrid-csi-plugin/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hybrid-csi-plugin-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hybrid-csi-plugin-controller
subjects:
  - kind: ServiceAccount
    name: hybrid-csi-plugin-controller
    namespace: csi-hybrid
---
# Source: hybrid-csi-plugin/templates/controller-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hybrid-csi-plugin-controller
  namespace: csi-hybrid
  labels:
    helm.sh/chart: hybrid-csi-plugin-0.1.1
    app.kubernetes.io/name: hybrid-csi-plugin
    app.kubernetes.io/instance: hybrid-csi-plugin
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get"]
---
# Source: hybrid-csi-plugin/templates/controller-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hybrid-csi-plugin-controller
  namespace: csi-hybrid
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hybrid-csi-plugin-controller
subjects:
  - kind: ServiceAccount
    name: hybrid-csi-plugin-controller
    namespace: csi-hybrid
---
# Source: hybrid-csi-plugin/templates/controller-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hybrid-csi-plugin-controller
  namespace: csi-hybrid
  labels:
    helm.sh/chart: hybrid-csi-plugin-0.1.1
    app.kubernetes.io/name: hybrid-csi-plugin
    app.kubernetes.io/instance: hybrid-csi-plugin
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: hybrid-csi-plugin
      app.kubernetes.io/instance: hybrid-csi-plugin
      app.kubernetes.io/component: controller
  template:
    metadata:
      annotations:
        checksum/config: 74234e98afe7498fb5daf1f36ac2d78acc339464f950703b8c019892f982b90b
      labels:
        app.kubernetes.io/name: hybrid-csi-plugin
        app.kubernetes.io/instance: hybrid-csi-plugin
        app.kubernetes.io/component: controller
    spec:
      priorityClassName: system-cluster-critical
      enableServiceLinks: false
      serviceAccountName: hybrid-csi-plugin-controller
      securityContext:
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
      containers:
        - name: hybrid-csi-plugin-controller
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
          image: "ghcr.io/sergelogvinov/hybrid-csi-controller:v0.0.1"
          imagePullPolicy: IfNotPresent
          args:
            - "-v=5"
          ports:
          resources:
            null
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: hybrid-csi-plugin
              app.kubernetes.io/instance: hybrid-csi-plugin
              app.kubernetes.io/component: controller
---
# Source: hybrid-csi-plugin/templates/csidriver.yaml
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.hybrid.sinextra.dev
spec:
  attachRequired: true
  podInfoOnMount: true
  storageCapacity: false
  volumeLifecycleModes:
    - Persistent
